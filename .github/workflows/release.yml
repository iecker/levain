name: Create a new release

on:
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
    inputs:
      releaseNumber:
        description: 'Release number'     
        required: true
      denoVersion:
        description: 'Deno version (optional)'     
        required: false

jobs:
  createRelease:
    runs-on: ubuntu-latest

    steps:
      - name: Check parameters
        run: |
          # Check releaseNumber
          version=$LEVAIN_VERSION
          if [[ $version =~ ^[0-9]+\.[0-9]+\.[0-9]+$ ]]; then
            echo Version v${version};
          else
            echo Invalid version number - $version;
            echo
            echo You must use the pattern
            echo major.minor.patch
            echo
            echo Examples:
            echo 0.20.1
            echo 1.0.3
            echo 2.5.0
            echo

            exit 1
          fi

          # Check denoVersion
          version=${{ github.event.inputs.denoVersion }}
          if [ -n "$version" ]; then
            if [[ $version =~ ^[0-9]+\.[0-9]+\.[0-9]+$ ]]; then
              echo DenoVersion v${version};
            else
              echo Invalid denoVersion - $version;
              echo
              echo You must use the pattern
              echo major.minor.patch
              echo
              echo Examples:
              echo 0.20.1
              echo 1.0.3
              echo 2.5.0
              echo

              exit 1
            fi
          fi
        env:
          LEVAIN_VERSION: ${{ github.event.inputs.releaseNumber }} 

      - name: Clean TEMP
        run: rm -rf $RUNNER_TEMP && mkdir -p $RUNNER_TEMP

      - name: Clean Workspace
        run: rm -rf $GITHUB_WORKSPACE && mkdir -p $GITHUB_WORKSPACE

      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Get Deno
        run: |
          rm -rf $DENO_ROOT_PATH && mkdir -p $DENO_ROOT_PATH
          echo Deno Windows
          bash $GITHUB_WORKSPACE/githubScripts/get-deno.sh $DENO_ROOT_PATH/windows Windows ${{ github.event.inputs.denoVersion }}
          echo Deno Linux
          bash $GITHUB_WORKSPACE/githubScripts/get-deno.sh $DENO_ROOT_PATH/linux Linux ${{ github.event.inputs.denoVersion }}
        env:
          DENO_ROOT_PATH: ${{ runner.temp }}/deno

      - name: Check sources
        run: |
          bash $GITHUB_WORKSPACE/githubScripts/levain-check.sh $DENO_ROOT_PATH/linux/deno
        env:
          DENO_ROOT_PATH: ${{ runner.temp }}/deno

      - name: Git config commit user
        run: |
          # Git config commit user
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git config pull.rebase true

      - name: Tag
        run: |
          bash $GITHUB_WORKSPACE/githubScripts/tag-release.sh $LEVAIN_VERSION
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          LEVAIN_VERSION: ${{ github.event.inputs.releaseNumber }} 

      - name: Changelog
        run: |
          bash $GITHUB_WORKSPACE/githubScripts/changelog.sh latest $LEVAIN_VERSION > ${{ runner.temp }}/changelog.$LEVAIN_VERSION.md
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          LEVAIN_VERSION: ${{ github.event.inputs.releaseNumber }} 

      - name: Levain release with tag
        run: |
          bash $GITHUB_WORKSPACE/githubScripts/get-levain-tag.sh $LEVAIN_VERSION $LEVAIN_RELEASE_PATH
        env:
          LEVAIN_VERSION: ${{ github.event.inputs.releaseNumber }} 
          LEVAIN_RELEASE_PATH: ${{ runner.temp }}/levain-${{ github.event.inputs.releaseNumber }}

      - name: Levain embedded binaries
        run: |
          bash $GITHUB_WORKSPACE/githubScripts/levain-embedded-binaries.sh $LEVAIN_RELEASE_PATH $DENO_ROOT_PATH/windows
        env:
          DENO_ROOT_PATH: ${{ runner.temp }}/deno
          LEVAIN_VERSION: ${{ github.event.inputs.releaseNumber }} 
          LEVAIN_RELEASE_PATH: ${{ runner.temp }}/levain-${{ github.event.inputs.releaseNumber }}

      - name: Levain install - PowerShell
        run: |
          bash $LEVAIN_RELEASE_PATH/install/install.ps1 ${{ runner.temp }}/install.ps1
        env:
          LEVAIN_RELEASE_PATH: ${{ runner.temp }}/levain-${{ github.event.inputs.releaseNumber }}

      - name: Levain bootstrap
        run: |
          bash $GITHUB_WORKSPACE/githubScripts/levain-bootstrap.sh $LEVAIN_RELEASE_PATH ${{ runner.temp }}/levainBootstrap-windows-x86_64.zip
        env:
          DENO_ROOT_PATH: ${{ runner.temp }}/deno
          LEVAIN_VERSION: ${{ github.event.inputs.releaseNumber }} 
          LEVAIN_RELEASE_PATH: ${{ runner.temp }}/levain-${{ github.event.inputs.releaseNumber }}

      - name: Clean Levain release
        run: |
          bash $GITHUB_WORKSPACE/githubScripts/clean-levain-release.sh $LEVAIN_RELEASE_PATH
        env:
          LEVAIN_RELEASE_PATH: ${{ runner.temp }}/levain-${{ github.event.inputs.releaseNumber }}

      - name: Levain bundle
        run: |
          bash $GITHUB_WORKSPACE/githubScripts/levain-bundle.sh $LEVAIN_RELEASE_PATH $DENO_ROOT_PATH/linux/deno
        env:
          DENO_ROOT_PATH: ${{ runner.temp }}/deno
          LEVAIN_VERSION: ${{ github.event.inputs.releaseNumber }} 
          LEVAIN_RELEASE_PATH: ${{ runner.temp }}/levain-${{ github.event.inputs.releaseNumber }}

      - name: Levain package
        run: |
          bash $GITHUB_WORKSPACE/githubScripts/levain-package.sh $LEVAIN_RELEASE_PATH ${{ runner.temp }}/levain-windows-x86_64.zip STRIP
        env:
          LEVAIN_VERSION: ${{ github.event.inputs.releaseNumber }} 
          LEVAIN_RELEASE_PATH: ${{ runner.temp }}/levain-${{ github.event.inputs.releaseNumber }}

      - name: Levain package - with version
        run: |
          bash $GITHUB_WORKSPACE/githubScripts/levain-package.sh $LEVAIN_RELEASE_PATH ${{ runner.temp }}/levain-v$LEVAIN_VERSION-windows-x86_64.zip
        env:
          LEVAIN_VERSION: ${{ github.event.inputs.releaseNumber }} 
          LEVAIN_RELEASE_PATH: ${{ runner.temp }}/levain-${{ github.event.inputs.releaseNumber }}

      - name: Levain package binaries
        run: |
          bash $GITHUB_WORKSPACE/githubScripts/levain-package-binaries.sh $LEVAIN_RELEASE_PATH ${{ runner.temp }}/levain-extra-bin-windows-x86_64.zip
        env:
          LEVAIN_VERSION: ${{ github.event.inputs.releaseNumber }} 
          LEVAIN_RELEASE_PATH: ${{ runner.temp }}/levain-${{ github.event.inputs.releaseNumber }}


      ##############################################################
      ### Create release
      ##############################################################
      - name: Create release
        id: create_release
        uses: actions/create-release@v1
        with:
          tag_name: v${{ env.LEVAIN_VERSION }}
          release_name: v${{ env.LEVAIN_VERSION }}
          commitish: master
          body_path: ${{ runner.temp }}/changelog.${{ env.LEVAIN_VERSION }}.md
          draft: true
          prerelease: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          LEVAIN_VERSION: ${{ github.event.inputs.releaseNumber }} 

      # - name: Wait release - Timeout 5 min
      #   run: timeout 300 bash -c 'while [[ "$(curl -s -o /dev/null -w ''%{http_code}'' https://api.github.com/repos/jmoalves/levain/releases/tags/v${{ env.LEVAIN_VERSION }})" != "200" ]]; do echo Waiting...; sleep 5; done' || false
      #   env:
      #     LEVAIN_VERSION: ${{ github.event.inputs.releaseNumber }} 

      - name: Upload asset - levain-v${{ env.LEVAIN_VERSION }}-windows-x86_64.zip
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          LEVAIN_VERSION: ${{ github.event.inputs.releaseNumber }} 
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ${{ runner.temp }}/levain-v${{ env.LEVAIN_VERSION }}-windows-x86_64.zip
          asset_name: levain-v${{ env.LEVAIN_VERSION }}-windows-x86_64.zip
          asset_content_type: application/zip

      - name: Upload asset - levain-v${{ env.LEVAIN_VERSION }}-windows-x86_64.zip.sha256
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          LEVAIN_VERSION: ${{ github.event.inputs.releaseNumber }} 
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ${{ runner.temp }}/levain-v${{ env.LEVAIN_VERSION }}-windows-x86_64.zip.sha256
          asset_name: levain-v${{ env.LEVAIN_VERSION }}-windows-x86_64.zip.sha256
          asset_content_type: text/plain

      - name: Upload asset - levain-windows-x86_64.zip
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          LEVAIN_VERSION: ${{ github.event.inputs.releaseNumber }} 
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ${{ runner.temp }}/levain-windows-x86_64.zip
          asset_name: levain-windows-x86_64.zip
          asset_content_type: application/zip

      - name: Upload asset - levain-windows-x86_64.zip.sha256
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          LEVAIN_VERSION: ${{ github.event.inputs.releaseNumber }} 
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ${{ runner.temp }}/levain-windows-x86_64.zip.sha256
          asset_name: levain-windows-x86_64.zip.sha256
          asset_content_type: text/plain

      - name: Upload asset - levain-extra-bin-windows-x86_64.zip
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          LEVAIN_VERSION: ${{ github.event.inputs.releaseNumber }} 
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ${{ runner.temp }}/levain-extra-bin-windows-x86_64.zip
          asset_name: levain-extra-bin-windows-x86_64.zip
          asset_content_type: application/zip

      - name: Upload asset - levain-extra-bin-windows-x86_64.zip.sha256
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          LEVAIN_VERSION: ${{ github.event.inputs.releaseNumber }} 
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ${{ runner.temp }}/levain-extra-bin-windows-x86_64.zip.sha256
          asset_name: levain-extra-bin-windows-x86_64.zip.sha256
          asset_content_type: text/plain

      - name: Upload asset - levainBootstrap-windows-x86_64.zip
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          LEVAIN_VERSION: ${{ github.event.inputs.releaseNumber }} 
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ${{ runner.temp }}/levainBootstrap-windows-x86_64.zip
          asset_name: levainBootstrap-windows-x86_64.zip
          asset_content_type: application/zip

      - name: Upload asset - levainBootstrap-windows-x86_64.zip.sha256
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          LEVAIN_VERSION: ${{ github.event.inputs.releaseNumber }} 
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ${{ runner.temp }}/levainBootstrap-windows-x86_64.zip.sha256
          asset_name: levainBootstrap-windows-x86_64.zip.sha256
          asset_content_type: text/plain

      - name: Upload asset - install.ps1
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          LEVAIN_VERSION: ${{ github.event.inputs.releaseNumber }} 
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ${{ runner.temp }}/install.ps1
          asset_name: install.ps1
          asset_content_type: text/plain

      ##############################################################
      ### Publish release
      ##############################################################
      - name: Publish release
        uses: eregon/publish-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          release_id: ${{ steps.create_release.outputs.id }}
