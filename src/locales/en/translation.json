{
    "enterFinish": "Hit ENTER to finish",
    "levain": {
        "levainRan": "Levain ran in {{timer}}",
        "executionFailed": "execution FAILED",
        "executionSuccess": "execution SUCCESS"
    },
    "levain_cli": {
        "levainVersion": "Levain {{version}} with Deno v{{denoVersion}} at {{levainRootFile}}",
        "levainUpgrade": "Levain upgrade completed. Please re-execute your previous command",
        "bye": "Bye.",
        "availableCommands": "Available commands:"
    },
    "cmd": {
        "actions": {
            "actionsFound": "= Actions:",
            "example": "  actions <optional search text>"
        },
        "clean": {
            "startFeedback": "# CLEAN...",
            "logs": "cleaning logs",
            "cmd.clean.cleaned":"Cleaned {{amount}}",
            "endFeedback": "# CLEAN - {{amount}}",
            "errorIgnoringEntryPath": "Error {{error}} - Ignoring {{entryPath}}",
            "entryPathIgnoringError": "{{entryPath}} - Ignoring {{error}}",
            "example": "  clean --cache(optional) --backup(optional) --temp(optional) --logs(optional)"
        },
        "command_factory": {
            "notFound": "Command '{{cmd}}' not found",
            "didYouMean": "Did you mean one of these commands?"
        },
        "explain": {
            "nothing": "explain - Nothing to explain.",
            "example": "  explain <package>..."
        },
        "info": {
            "yourPackages": "=== Your packages",
            "packageNotFound": "Package not found - {{pkgName}}",
            "notInstalled": " - NOT installed",
            "needUpdate": " - need UPDATE",
            "example": "  info [--verbose] <package name> ... <package name>"
        },
        "install": {
            "noPackages": "What packages do your want to install? Aborting...",
            "unableToFind": "{{pkgNames}} - Unable to find some packages",
            "similar": "=== Similar known packages",
            "errorNotFound": "Couldn't find package {{pkgNames}} to install. Aborting...",
            "installing": "- Installing - {{object}}",
            "updating": "- Updating - {{object}}",
            "updateAvailable": "Some packages have an update available.",
            "updatePrompt": "Should we update them now (Y,n)?",
            "askLater": "Ok. We will ask again later.",
            "reloadInstalled": "Reloading packages - installed only.",
            "nothing": "install - Nothing to install. Aborting...",
            "finished": "install {{pkgNames}} - FINISHED",
            "ignoreMinVer": "- We will IGNORE the package {{pkg}} installation. It needs a newer levain version {{min}} - Your version is {{current}}",
            "mustUpgradeLevain": "You must upgrade your levain (or fix the package {{pkg}} configuration",
            "pkgTook": "--> {{pkg}} took {{timer}}",
            "goodNotSave": "Good. We do not need to save {{baseDir}} because it does not exist",
            "keepingBaseDir": "- Keeping the baseDir for {{pkg}} as requested",
            "ignoreError": "Ignoring - {{error}}",
            "errorSaving": "- Found error saving {{pkg}}. Ignoring upgrade",
            "example": "  install <package name>"
        }
    },
    "lib": {
        "repository": {
            "repository_manager": {
                "loaded": "- Loaded REPOS {{repos}}",
                "currentMultiple": "Found more than one .levain.yaml file => Using {{chosen}} of {{choices}}",
                "notInitialized": "RepositoryManager not initialized",
                "testOnly": "RepositoryManager.repository({{repo}}) - TEST ONLY!",
                "notFound": "Error initializing RepositoryManager - repositories not found"
            }
        },
        "user_info": {
            "userinfo_utils": {
                "loadingUserinfo": "loading user info from {{uri}}",
                "userinfoDest": "User info will be saved in {{uri}}",
                "hello": "Hello :-)",
                "noUsername": "No username for defaultEmail",
                "noEmailDomain": "No emailDomain for defaultEmail",
                "unableEmail": "Unable to collect email",
                "askingPassword": "Asking for password, try {{try}}",
                "passwordWarning": {
                    "1": " === ATTENTION PLEASE! The characters below are known to cause problems with passwords",
                    "2": " === If you use one of them, please change your password and come back.",
                    "3": " === Do not use:"
                },
                "passwordSize": "* Password must have at least 3 characters *",
                "attempt": "Attempt: {{try}}",
                "passwordPrompt": "Please, inform your network password: ",
                "confirmPassword": "Confirm your password: ",
                "invalidChar": "****** INVALID CHAR IN PASSWORD. Please change your password and try again.",
                "match": "Perfect, the typed passwords are the same.",
                "mismatch": "Password mismatch... Please, inform again.",
                "unablePasswordAttempts": "Unable to collect password after {{tries}} attempts"
            }
        }
    }
}
